user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log;

pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    ldap_server ldap {
        url ldap://__LDAPSRV__:389/__LDAPUSERDN__?sAMAccountName?sub?(objectClass=person);
        basedn "__LDAPBASEDN__";
        binddn "__LDAPBINDDN__";
        binddn_passwd __LDAPBINDPWD__;
        group_attribute member;
        require group "__LDAPGROUP__";
        satisfy all;
        group_attribute_is_dn on;
        require valid_user;
        error_log /var/log/nginx/debug.log debug;
    }
    auth_ldap_cache_enabled on;
    auth_ldap_cache_expiration_time 600000;
    auth_ldap_cache_size 1000;
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;

    keepalive_timeout  65;

    gzip  on;

    include /etc/nginx/conf.d/*.conf;

    index   index.html;

    upstream elasticsearch {
       server 127.0.0.1:9200;
       keepalive 15;
    }

    upstream kibana4 {
       server 127.0.0.1:5601;
       keepalive 15;
    }

    server {
        auth_ldap "Please login using your AD account";
        auth_ldap_servers ldap;
        listen                  8080;
        server_name             localhost;

        #auth_basic              "Restricted";
        #auth_basic_user_file    /etc/nginx/.htpasswd;

        location /kibana3/ {
            root                /usr/share/nginx/html/;
            index               index.html index.htm;
        }


      location / {
        proxy_pass http://kibana4;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
      }

      location ~ ^/kopf/.*$ {
        proxy_pass http://elasticsearch;
        rewrite ^/kopf/(.*) /_plugin/kopf/$1 break;
      }

      location ~ ^/es.*$ {
        proxy_pass http://elasticsearch;
        rewrite ^/es(.*) /$1 break;
      }
    }
}
